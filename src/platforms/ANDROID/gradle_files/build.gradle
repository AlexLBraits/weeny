//////////////////////////////////////////////////////////////////////////////
//
// The Top-level Build File
//
//////////////////////////////////////////////////////////////////////////////
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.+'
    }
}

allprojects {
   repositories {
       jcenter()
   }
}

//////////////////////////////////////////////////////////////////////////////
// 
// 
// 
//////////////////////////////////////////////////////////////////////////////
Properties antProperties = new Properties()
antProperties.load(new FileInputStream("ant.properties"))

//////////////////////////////////////////////////////////////////////////////
// 
// The Module-level Build File
// 
//////////////////////////////////////////////////////////////////////////////
apply plugin: 'com.android.application'

configurations {
  provided
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
}

android.applicationVariants.all {
    variant -> variant.javaCompile.classpath += configurations.provided
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        applicationId project.ANDROID_BUILD_APPLICATION_ID

        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile = new File(antProperties['key.store'])
            storePassword = antProperties['key.store.password']
            keyAlias = antProperties['key.alias']
            keyPassword = antProperties['key.alias.password']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }

		unsigned.initWith(buildTypes.release)
		unsigned {
		    signingConfig null
		}
    }

    sourceSets {
        main{
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDir 'libs'
        }
    }

    lintOptions {
      abortOnError false
      disable 'MissingTranslation'
      disable "ResourceType"
    }
}

task debug {
  dependsOn 'assembleDebug'
}

task release {
  dependsOn 'assembleRelease'
  dependsOn 'assembleUnsigned'
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.14.1'
}
